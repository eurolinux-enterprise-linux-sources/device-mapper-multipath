---
 libmultipath/discovery.c |   44 +++++++++++++++++++++++++++++++++-----------
 libmultipath/discovery.h |    8 +++++---
 multipathd/main.c        |   11 +++++++----
 3 files changed, 45 insertions(+), 18 deletions(-)

Index: multipath-tools/libmultipath/discovery.c
===================================================================
--- multipath-tools.orig/libmultipath/discovery.c
+++ multipath-tools/libmultipath/discovery.c
@@ -27,30 +27,38 @@
 #include "discovery.h"
 #include "prio.h"
 
-struct path *
-store_pathinfo (vector pathvec, vector hwtable, char * devname, int flag)
+int
+store_pathinfo (vector pathvec, vector hwtable, char * devname, int flag,
+		struct path **pp_ptr)
 {
+	int err = 1;
 	struct path * pp;
 
+	if (pp_ptr)
+		*pp_ptr = NULL;
 	pp = alloc_path();
 
 	if (!pp)
-		return NULL;
+		return 1;
 
 	if(safe_sprintf(pp->dev, "%s", devname)) {
 		condlog(0, "pp->dev too small");
 		goto out;
 	}
-	if (pathinfo(pp, hwtable, flag))
+	err = pathinfo(pp, hwtable, flag | DI_BLACKLIST);
+	if (err)
 		goto out;
 
-	if (store_path(pathvec, pp))
+	err = store_path(pathvec, pp);
+	if (err)
 		goto out;
 
-	return pp;
 out:
-	free_path(pp);
-	return NULL;
+	if (err)
+		free_path(pp);
+	else if (pp_ptr)
+		*pp_ptr = pp;
+	return err;
 }
 
 static int
@@ -80,9 +88,11 @@ path_discover (vector pathvec, struct co
 	pp = find_path_by_dev(pathvec, devname);
 
 	if (!pp) {
-		pp = store_pathinfo(pathvec, conf->hwtable,
-				    devname, flag);
-		return (pp ? 0 : 1);
+		if (store_pathinfo(pathvec, conf->hwtable, devname,
+				   flag, NULL) != 1)
+			return 0;
+		else
+			return 1;
 	}
 	return pathinfo(pp, conf->hwtable, flag);
 }
@@ -929,6 +939,12 @@ pathinfo (struct path *pp, vector hwtabl
 	 */
 	if (mask & DI_SYSFS && sysfs_pathinfo(pp))
 		return 1;
+	if (mask & DI_BLACKLIST && mask & DI_SYSFS) {
+		if (filter_device(conf->blist_device, conf->elist_device,
+				  pp->vendor_id, pp->product_id) > 0) {
+			return 2;
+		}
+	}
 
 	/*
 	 * fetch info not available through sysfs
@@ -961,6 +977,12 @@ pathinfo (struct path *pp, vector hwtabl
 
 	if (mask & DI_WWID && !strlen(pp->wwid))
 		get_uid(pp);
+	if (mask & DI_BLACKLIST && mask & DI_WWID) {
+		if (filter_wwid(conf->blist_wwid, conf->elist_wwid,
+				pp->wwid) > 0) {
+			return 2;
+		}
+	}
 
 	 /*
 	  * Retrieve path priority, even for PATH_DOWN paths if it has never
Index: multipath-tools/libmultipath/discovery.h
===================================================================
--- multipath-tools.orig/libmultipath/discovery.h
+++ multipath-tools/libmultipath/discovery.h
@@ -33,8 +33,8 @@ int path_offline (struct path *);
 int get_state (struct path * pp, int daemon);
 int path_blocked (struct path *);
 int pathinfo (struct path *, vector hwtable, int mask);
-struct path * store_pathinfo (vector pathvec, vector hwtable,
-			      char * devname, int flag);
+int store_pathinfo (vector pathvec, vector hwtable,
+		    char * devname, int flag, struct path **pp_ptr);
 int sysfs_set_scsi_tmo (struct multipath *mpp);
 int sysfs_get_timeout(struct sysfs_device *dev, unsigned int *timeout);
 
@@ -46,7 +46,8 @@ enum discovery_mode {
 	__DI_SERIAL,
 	__DI_CHECKER,
 	__DI_PRIO,
-	__DI_WWID
+	__DI_WWID,
+	__DI_BLACKLIST,
 };
 
 #define DI_SYSFS	(1 << __DI_SYSFS)
@@ -54,6 +55,7 @@ enum discovery_mode {
 #define DI_CHECKER	(1 << __DI_CHECKER)
 #define DI_PRIO		(1 << __DI_PRIO)
 #define DI_WWID 	(1 << __DI_WWID)
+#define DI_BLACKLIST    (1 << __DI_BLACKLIST)
 
 #define DI_ALL		(DI_SYSFS  | DI_SERIAL | DI_CHECKER | DI_PRIO | \
 			 DI_WWID)
Index: multipath-tools/multipathd/main.c
===================================================================
--- multipath-tools.orig/multipathd/main.c
+++ multipath-tools/multipathd/main.c
@@ -401,10 +401,13 @@ ev_add_path (char * devname, struct vect
 		/*
 		 * get path vital state
 		 */
-		if (!(pp = store_pathinfo(vecs->pathvec, conf->hwtable,
-		      devname, DI_ALL))) {
-			condlog(0, "%s: failed to store path info", devname);
-			return 1;
+		int err = store_pathinfo(vecs->pathvec, conf->hwtable,
+					 devname, DI_ALL, &pp);
+		if (err) {
+			if (err == 1)
+				condlog(0, "%s: failed to store path info",
+					devname);
+			return err;
 		}
 		pp->checkint = conf->checkint;
 	}
