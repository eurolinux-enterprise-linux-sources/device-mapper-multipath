---
 libmultipath/checkers/directio.c |    9 +++++----
 libmultipath/checkers/tur.c      |    2 +-
 2 files changed, 6 insertions(+), 5 deletions(-)

Index: multipath-tools/libmultipath/checkers/directio.c
===================================================================
--- multipath-tools.orig/libmultipath/checkers/directio.c
+++ multipath-tools/libmultipath/checkers/directio.c
@@ -117,7 +117,8 @@ void libcheck_free (struct checker * c)
 }
 
 static int
-check_state(int fd, struct directio_context *ct, int sync)
+check_state(int fd, struct directio_context *ct, int sync, unsigned int
+	    async_timeout)
 {
 	struct timespec	timeout = { .tv_nsec = 5 };
 	struct io_event event;
@@ -130,7 +131,7 @@ check_state(int fd, struct directio_cont
 	}
 	if (sync) {
 		LOG(4, "called in synchronous mode");
-		timeout.tv_sec  = ASYNC_TIMEOUT_SEC;
+		timeout.tv_sec  = async_timeout;
 		timeout.tv_nsec = 0;
 	}
 
@@ -156,7 +157,7 @@ check_state(int fd, struct directio_cont
 		ct->running = 0;
 		rc = PATH_UNCHECKED;
 	} else if (r < 1L) {
-		if (ct->running > ASYNC_TIMEOUT_SEC || sync) {
+		if (ct->running > async_timeout || sync) {
 			struct iocb *ios[1] = { &ct->io };
 
 			LOG(3, "abort check on timeout");
@@ -191,7 +192,7 @@ int libcheck_check (struct checker * c)
 	if (!ct)
 		return PATH_UNCHECKED;
 
-	ret = check_state(c->fd, ct, c->sync);
+	ret = check_state(c->fd, ct, c->sync, c->timeout / 1000);
 
 	switch (ret)
 	{
Index: multipath-tools/libmultipath/checkers/tur.c
===================================================================
--- multipath-tools.orig/libmultipath/checkers/tur.c
+++ multipath-tools/libmultipath/checkers/tur.c
@@ -357,7 +357,7 @@ void tur_set_async_timeout(struct checke
 	struct timeval now;
 
 	gettimeofday(&now, NULL);
-	ct->time = now.tv_sec + c->timeout;
+	ct->time = now.tv_sec + (c->timeout / 1000);
 }
 
 int tur_check_async_timeout(struct checker *c)
